@page "/addproduct";
@inject Blazored.LocalStorage.ILocalStorageService store;

<h1 class="mb-3 mt-3">Add Product</h1>

<EditForm Model="@aProduct" OnSubmit="@HandleSubmit" class="row p-3">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="col-md-12 mb-3">
        <label for="Name">Name</label>
        <InputText id="Name" @bind-Value="aProduct.Name" class="form-control" />
    </div>

    <div class="col-md-6 mb-3">
        <label for="Price">Price</label>
        <InputNumber id="Price" @bind-Value="aProduct.Price" class="form-control" />
    </div>

    <div class="col-md-6 mb-3">
        <label for="PublishedDate">Published Date</label>
        <InputDate id="PublishedDate" @bind-Value="aProduct.PublishedDate" class="form-control" />
    </div>

    <div class="col-md-12 mb-3">
        <label for="Description">Description</label>
        <InputTextArea id="Description" @bind-Value="aProduct.Description" class="form-control" />
    </div>

    <div class="col-12 mb-3">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</EditForm>

@code {

    private Product aProduct = new Product();
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        var storeValues = await store.GetItemAsync<List<Product>>("products");
        if (products == null)
        {
            products = new List<Product>();
        }
        else
        {
            products = storeValues;
        }
    }

    private async Task HandleSubmit()
    {
        products.Add(aProduct);
        await store.SetItemAsync("products", products);
        Console.WriteLine($"Name: {aProduct.Name}, publiceret {aProduct.PublishedDate} - Pris: {aProduct.Price}");

    }
}